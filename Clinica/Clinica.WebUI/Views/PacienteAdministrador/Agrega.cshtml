@model Clinica.Core.Models.Paciente

@{
    ViewBag.Title = "Agrega";
}






<h2>Agrega</h2>


@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()



<div class="form-horizontal">
    <h4>Paciente</h4>
    <hr />
    @Html.ValidationSummary(true, "", new { @class = "text-danger" })
    <div class="form-group">
        @Html.LabelFor(model => model.Nombre, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.Nombre, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.Nombre, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.Edad, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.Edad, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.Edad, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.FechaDeNacimiento, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.FechaDeNacimiento, new { htmlAttributes = new { Value = Model.FechaDeNacimiento.ToString("dd-MMM-yyyy"), @class = "form-control date-picker", onkeydown = "return false", onpaste = "return false" } })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.Sexo, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.Sexo, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.Sexo, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.Peso, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.Peso, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.Peso, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.CorreoElectronico, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.CorreoElectronico, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.CorreoElectronico, "", new { @class = "text-danger" })
        </div>
    </div>
 





    <div class="form-horizontal">

        <hr />



    </div>

    <div class="form-group">
        <div class="col-md-offset-2 col-md-10">
            <input type="submit" value="Create" class="btn btn-default" />
        </div>
    </div>
</div>



}



@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
    <link href="~/Content/themes/base/jquery-ui.min.css" rel="stylesheet" />
    <script src="~/Scripts/jquery-3.1.1.min.js"></script>
    <script src="~/Scripts/jquery-ui-1.12.1.min.js"></script>

    <script type="text/javascript">
        //$(function () {
        //    $(".date-picker").datepicker({
        //        changeMonth: true,
        //        changeYear: true,
        //        yearRange: "-100:+0", // You can set the year range as per as your need
        //        dateFormat: 'dd-M-yy'
        //    });

        $(function () {
            $(".date-picker").datepicker({

                changeMonth: true,
                changeYear: true,
                yearRange: "-100:+0", // You can set the year range as per as your need

                onChangeMonthYear: function (year, month, inst) {
                    var curDate = $(this).datepicker("getDate");
                    if (curDate == null)
                        return;
                    if (curDate.getYear() != year || curDate.getMonth() != month - 1) {
                        curDate.setYear(year);
                        curDate.setMonth(month - 1);
                        $(this).datepicker("setDate", curDate);
                    }
                }
            });
        });

 
    </script>

}
